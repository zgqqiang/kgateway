name: Build-Envoy-ARM64

env:
  ENVOY_GLOO_REF: "v1.34.0-patch0"
  GO_VERSION: "1.24.1"

on:
  workflow_dispatch:
    inputs:
      ref:
        description: '上游分支或tag (例: v2.0.0 / main)'
        required: true
        default: 'v2.0.0'
      image_tag:
        description: '最终镜像 tag (例: v2.0.0-arm / latest)'
        required: true
        default: 'v2.0.0'

jobs:
  envoy:
    runs-on: ubuntu-24.04-arm      # ① 必须是 GitHub 官方 ARM runner 或你自建的 ARM 标签
    steps:
      - name: Checkout kgateway
        uses: actions/checkout@v4
        with:
          repository: kgateway-dev/kgateway
          ref: ${{ github.event.inputs.ref }}
          path: kgateway

      - name: Checkout envoy-gloo
        uses: actions/checkout@v4
        with:
          repository: solo-io/envoy-gloo
          ref: ${{ env.ENVOY_GLOO_REF }}
          path: envoy-gloo

      - name: Install Go
        run: |
          curl -L https://go.dev/dl/go${{ env.GO_VERSION }}.linux-arm64.tar.gz | sudo tar -C /usr/local -xz
          echo "/usr/local/go/bin" >> $GITHUB_PATH

      - name: Patch ARM & proxy & source
        working-directory: envoy-gloo
        run: |
          sed -i 's|x86/bin/release.tar.zst|arm64/bin/release.tar.zst|g' ci/do_ci.sh
          cat ci/do_ci.sh
          cat > ci/Dockerfile-arm <<'EOF'
          FROM ubuntu:focal
          ENV loglevel=info
          ENV DEBIAN_FRONTEND=noninteractive
          RUN apt-get update && \
              apt-get install --no-install-recommends -y ca-certificates && \
              apt-get upgrade -y && \
              apt-get clean && \
              rm -rf /var/log/*log /var/lib/apt/lists/* /var/log/apt/* /var/lib/dpkg/*-old /var/cache/debconf/*-old
          RUN mkdir -p /etc/envoy
          ADD linux/amd64/build_envoy_release/envoy /usr/local/bin/envoy
          ENTRYPOINT ["/usr/local/bin/envoy"]
          CMD ["-c", "/etc/envoy/envoy.yaml"]
          EOF

      - name: Build envoy binary & capture build image name
        working-directory: envoy-gloo
        id: build
        run: |
          . ci/envoy_build_sha.sh
          echo "build_image=envoyproxy/envoy-build-ubuntu:${ENVOY_BUILD_SHA}" >> $GITHUB_OUTPUT
          make fast-build-arm

      - name: Docker Login
        uses: docker/login-action@v3.4.0
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_PASSWD }}

      - name: Tag & push build image
        run: |
          SRC=${{ steps.build.outputs.build_image }}
          DST=docker.io/${{ secrets.DOCKERHUB_USER }}/envoy-build-ubuntu:${{ github.event.inputs.image_tag }}
          docker tag "$SRC" "$DST"
          docker push "$DST"
          echo "✅ 已推送 build 镜像：$DST"
